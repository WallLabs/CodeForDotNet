<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeForDotNet</name>
    </assembly>
    <members>
        <member name="T:CodeForDotNet.Numerics.Number">
            <summary>
            Number of unlimited size, based on a variable length byte array, signed or unsigned.
            </summary>
        </member>
        <member name="F:CodeForDotNet.Numerics.Number.NumberDigits">
            <summary>
            Valid number digits in order of value starting at zero.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Creates a value based on an existing array of bytes (not copied).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.Byte)">
            <summary>
            Creates a value based on an existing <see cref="T:System.Byte"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.SByte)">
            <summary>
            Creates a value based on an existing <see cref="T:System.SByte"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.Int16)">
            <summary>
            Creates a value based on an existing <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.UInt16)">
            <summary>
            Creates a value based on an existing <see cref="T:System.UInt16"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.Int32)">
            <summary>
            Creates a value based on an existing <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.UInt32)">
            <summary>
            Creates a value based on an existing <see cref="T:System.UInt32"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.Int64)">
            <summary>
            Creates a value based on an existing <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.UInt64)">
            <summary>
            Creates a value based on an existing <see cref="T:System.UInt64"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.Single)">
            <summary>
            Creates a value based on an existing <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.Double)">
            <summary>
            Creates a value based on an existing <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.#ctor(System.Decimal)">
            <summary>
            Creates a value based on an existing <see cref="T:System.Decimal"/>.
            </summary>
        </member>
        <member name="F:CodeForDotNet.Numerics.Number._bytes">
            <summary>
            The internal numeric value, stored as a byte array ordered from least significant (LSB) to most significant (MSB),
            i.e. the LSB is at index 0.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Equality(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Compares two objects of this type for equality.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Inequality(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Compares two objects of this type for equality.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Equals(System.Object)">
            <summary>
            Compares this object with another for equality.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Equals(CodeForDotNet.Numerics.Number)">
            <summary>
            Compares this object with another <see cref="T:CodeForDotNet.Numerics.Number"/> for equality.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_LessThan(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Tests if one <see cref="T:CodeForDotNet.Numerics.Number"/> is less than another.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_LessThanOrEqual(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Tests if one <see cref="T:CodeForDotNet.Numerics.Number"/> is less than or equal to another.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_GreaterThan(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Tests if one <see cref="T:CodeForDotNet.Numerics.Number"/> is greater than another.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_GreaterThanOrEqual(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Tests if one <see cref="T:CodeForDotNet.Numerics.Number"/> is greater than or equal to another.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.Byte)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (unsigned) <see cref="T:System.Byte"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.SByte)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (signed) <see cref="T:System.SByte"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.UInt16)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (unsigned) <see cref="T:System.UInt16"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.Int16)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (signed) <see cref="T:System.Int16"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.UInt32)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (unsigned) <see cref="T:System.UInt32"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.Int32)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (signed) <see cref="T:System.Int32"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.UInt64)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (unsigned) <see cref="T:System.UInt64"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.Int64)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (signed) <see cref="T:System.Int64"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.Single)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (signed) <see cref="T:System.Single"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.Double)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (signed) <see cref="T:System.Double"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Implicit(System.Decimal)~CodeForDotNet.Numerics.Number">
            <summary>
            Implicitly converts an (signed) <see cref="T:System.Decimal"/> to a <see cref="T:CodeForDotNet.Numerics.Number"/>.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Explicit(CodeForDotNet.Numerics.Number)~System.Byte">
            <summary>
            Explicitly converts a <see cref="T:CodeForDotNet.Numerics.Number"/> to a <see cref="T:System.Byte"/> (unsigned).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Explicit(CodeForDotNet.Numerics.Number)~System.SByte">
            <summary>
            Explicitly converts a <see cref="T:CodeForDotNet.Numerics.Number"/> to a <see cref="T:System.SByte"/> (signed).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Explicit(CodeForDotNet.Numerics.Number)~System.Int16">
            <summary>
            Explicitly converts a <see cref="T:CodeForDotNet.Numerics.Number"/> to a <see cref="T:System.Int16"/> (signed).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Explicit(CodeForDotNet.Numerics.Number)~System.UInt16">
            <summary>
            Explicitly converts a <see cref="T:CodeForDotNet.Numerics.Number"/> to a <see cref="T:System.UInt16"/> (unsigned).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Explicit(CodeForDotNet.Numerics.Number)~System.Int32">
            <summary>
            Explicitly converts a <see cref="T:CodeForDotNet.Numerics.Number"/> to a <see cref="T:System.Int32"/> (signed).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Explicit(CodeForDotNet.Numerics.Number)~System.UInt32">
            <summary>
            Explicitly converts a <see cref="T:CodeForDotNet.Numerics.Number"/> to a <see cref="T:System.UInt32"/> (unsigned).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Explicit(CodeForDotNet.Numerics.Number)~System.Int64">
            <summary>
            Explicitly converts a <see cref="T:CodeForDotNet.Numerics.Number"/> to a <see cref="T:System.Int64"/> (signed).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Explicit(CodeForDotNet.Numerics.Number)~System.UInt64">
            <summary>
            Explicitly converts a <see cref="T:CodeForDotNet.Numerics.Number"/> to a <see cref="T:System.UInt64"/> (unsigned).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Explicit(CodeForDotNet.Numerics.Number)~System.Decimal">
            <summary>
            Explicitly converts a <see cref="T:CodeForDotNet.Numerics.Number"/> to a <see cref="T:System.Decimal"/> (signed).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_BitwiseAnd(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Performs a bitwise AND on two <see cref="T:CodeForDotNet.Numerics.Number"/> values.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.BitwiseAnd(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Performs a bitwise AND on two <see cref="T:CodeForDotNet.Numerics.Number"/> values.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_BitwiseOr(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Performs a bitwise OR on two <see cref="T:CodeForDotNet.Numerics.Number"/> values.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.BitwiseOr(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Performs a bitwise OR on two <see cref="T:CodeForDotNet.Numerics.Number"/> values.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_ExclusiveOr(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Performs a bitwise XOR on two <see cref="T:CodeForDotNet.Numerics.Number"/> values.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Xor(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Performs a bitwise XOR on two <see cref="T:CodeForDotNet.Numerics.Number"/> values.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_LeftShift(CodeForDotNet.Numerics.Number,System.Int32)">
            <summary>
            Performs a bitwise left shift of a <see cref="T:CodeForDotNet.Numerics.Number"/> value.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.LeftShift(CodeForDotNet.Numerics.Number,System.Int32)">
            <summary>
            Performs a bitwise left shift of a <see cref="T:CodeForDotNet.Numerics.Number"/> value.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_RightShift(CodeForDotNet.Numerics.Number,System.Int32)">
            <summary>
            Performs a bitwise right shift of a <see cref="T:CodeForDotNet.Numerics.Number"/> value.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.RightShift(CodeForDotNet.Numerics.Number,System.Int32)">
            <summary>
            Performs a bitwise right shift of a <see cref="T:CodeForDotNet.Numerics.Number"/> value.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_OnesComplement(CodeForDotNet.Numerics.Number)">
            <summary>
            Performs a bitwise NOT on a <see cref="T:CodeForDotNet.Numerics.Number"/> value,
            also known as the "one's complement".
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.OnesComplement(CodeForDotNet.Numerics.Number)">
            <summary>
            Performs a bitwise NOT on a <see cref="T:CodeForDotNet.Numerics.Number"/> value,
            also known as the "one's complement".
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_UnaryNegation(CodeForDotNet.Numerics.Number)">
            <summary>
            Performs a negation of a <see cref="T:CodeForDotNet.Numerics.Number"/>,
            also known as the "two's complement".
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Negate(CodeForDotNet.Numerics.Number)">
            <summary>
            Performs a negation of a <see cref="T:CodeForDotNet.Numerics.Number"/>,
            also known as the "two's complement".
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_UnaryPlus(CodeForDotNet.Numerics.Number)">
            <summary>
            Returns the value of a <see cref="T:CodeForDotNet.Numerics.Number"/> (no change to sign).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Plus(CodeForDotNet.Numerics.Number)">
            <summary>
            Returns the value of a <see cref="T:CodeForDotNet.Numerics.Number"/> (no change to sign).
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Increment(CodeForDotNet.Numerics.Number)">
            <summary>
            Increments a <see cref="T:CodeForDotNet.Numerics.Number"/> by one.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Increment(CodeForDotNet.Numerics.Number)">
            <summary>
            Increments a <see cref="T:CodeForDotNet.Numerics.Number"/> by one.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Decrement(CodeForDotNet.Numerics.Number)">
            <summary>
            Decrements a <see cref="T:CodeForDotNet.Numerics.Number"/> by one.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Decrement(CodeForDotNet.Numerics.Number)">
            <summary>
            Decrements a <see cref="T:CodeForDotNet.Numerics.Number"/> by one.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Addition(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Adds two numbers together.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Add(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Adds two numbers together.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Subtraction(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Subtracts two numbers.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Subtract(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Subtracts two numbers.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Division(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Divides one <see cref="T:CodeForDotNet.Numerics.Number"/> by another.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Divide(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Divides one <see cref="T:CodeForDotNet.Numerics.Number"/> by another.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Divide(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number@)">
            <summary>
            Divides one <see cref="T:CodeForDotNet.Numerics.Number"/> by another, including remainder.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.op_Multiply(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Multiplies one <see cref="T:CodeForDotNet.Numerics.Number"/> by another.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Multiply(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Multiplies one <see cref="T:CodeForDotNet.Numerics.Number"/> by another.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.GetHashCode">
            <summary>
            Gets a hash based on the current value.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.GetBytes">
            <summary>
            Gets a read-only refernce to the internal bytes of this value.
            </summary>
            <remarks>
            The numeric value is stored in this byte array ordered from least significant (LSB) to most significant (MSB),
            i.e. the LSB is at index 0.
            </remarks>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Resize(System.Int32)">
            <summary>
            Returns a <see cref="T:CodeForDotNet.Numerics.Number"/> which has been resized with sign extension when <see cref="P:CodeForDotNet.Numerics.Number.Signed"/>.
            </summary>
            <param name="size">New size in bytes.</param>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Resize(System.Int32,System.Boolean)">
            <summary>
            Returns a <see cref="T:CodeForDotNet.Numerics.Number"/> which has been resized with optional sign extension.
            </summary>
            <param name="size">New size in bytes.</param>
            <param name="extendSign">When true the sign will be extended when setting to a larger value.</param>
            <returns>New value which is truncated or extended as specified. Any overflow is discarded.</returns>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.ToSigned(System.Boolean)">
            <summary>
            Creates a signed copy of this value, optionally extending to preserve sign.
            </summary>
            <param name="extend">
            Set true to preserve sign by extending when converting from unsigned to signed and
            the most significant (sign) bit is already used by the original value.
            </param>
            <returns>
            New <see cref="T:CodeForDotNet.Numerics.Number"/> which is signed and has the same value.
            </returns>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.ToUnsigned(System.Boolean)">
            <summary>
            Creates an unsigned copy of this value.
            </summary>
            <param name="positiveOnly">
            Set true to ensure a positive result by returning zero when negative.
            </param>
            <returns>
            New <see cref="T:CodeForDotNet.Numerics.Number"/> which is un-signed and has the same value when positive,
            and optionally the same bit value (but different interpreted value) or zero when negative
            (according to the <see paramref="positiveOnly"/> option).
            </returns>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.ToString">
            <summary>
            Converts the current value to a signed decimal string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.ToString(System.Int32)">
            <summary>
            Converts the number to a string of the specified base.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.ToString(System.Int32,System.Int32)">
            <summary>
            Converts the number to a string of the specified base.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.TryParse(System.String,System.Int32,CodeForDotNet.Numerics.Number@)">
            <summary>
            Converts a string to a number of the specified base.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.TryParse(System.String,System.Int32,CodeForDotNet.Numerics.Number@,System.Boolean)">
            <summary>
            Converts a string to a number of the specified base.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Absolute(CodeForDotNet.Numerics.Number)">
            <summary>
            Gets the absolute value of the number, basically
            converting negative to positive when necessary.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.Power(CodeForDotNet.Numerics.Number,CodeForDotNet.Numerics.Number)">
            <summary>
            Calculates the exponent, multiplying a <see cref="T:CodeForDotNet.Numerics.Number"/> by itself a number of times.
            </summary>
            <remarks>
            Also known as raising the <paramref name="value"/> to the specified <paramref name="exponent"/> "power".
            http://en.wikipedia.org/wiki/Exponentiation_by_squaring
            </remarks>
        </member>
        <member name="M:CodeForDotNet.Numerics.Number.CompareTo(CodeForDotNet.Numerics.Number)">
            <summary>
            Compares this <see cref="T:CodeForDotNet.Numerics.Number"/> with another.
            </summary>
        </member>
        <member name="P:CodeForDotNet.Numerics.Number.Zero">
            <summary>
            Zero signed value.
            </summary>
        </member>
        <member name="P:CodeForDotNet.Numerics.Number.One">
            <summary>
            One signed value.
            </summary>
        </member>
        <member name="P:CodeForDotNet.Numerics.Number.MinusOne">
            <summary>
            Minus-one signed value.
            </summary>
        </member>
        <member name="P:CodeForDotNet.Numerics.Number.Signed">
            <summary>
            Enables or disables signed number processing.
            </summary>
            <remarks>
            The internal value is not changed, only its interpretation.
            </remarks>
        </member>
        <member name="P:CodeForDotNet.Numerics.Number.ByteSize">
            <summary>
            Size in bytes.
            </summary>
        </member>
        <member name="P:CodeForDotNet.Numerics.Number.Sign">
            <summary>
            Indicates the sign, true for positive, false for negative.
            Always true when unsigned.
            </summary>
        </member>
        <member name="P:CodeForDotNet.Numerics.Number.IsZero">
            <summary>
            Indicates the current value is zero.
            </summary>
        </member>
        <member name="P:CodeForDotNet.Numerics.Number.Item(System.Int32)">
            <summary>
            Gets the byte at the specified index.
            </summary>
        </member>
        <member name="T:CodeForDotNet.Numerics.NumberExtensions">
            <summary>
            Number extensions.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.NumberExtensions.ToString(System.Int64,System.Int32)">
            <summary>
            Converts the number to a string of the specified base.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.NumberExtensions.ToString(System.Int64,System.Int32,System.Int32)">
            <summary>
            Converts the number to a string of the specified base.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.NumberExtensions.ToString(System.UInt64,System.Int32)">
            <summary>
            Converts the number to a string of the specified base.
            </summary>
        </member>
        <member name="M:CodeForDotNet.Numerics.NumberExtensions.ToString(System.UInt64,System.Int32,System.Int32)">
            <summary>
            Converts the number to a string of the specified base.
            </summary>
        </member>
    </members>
</doc>
